name: Release latest version

on:
  push:
    branches:
      - master

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Reset release branch to match master
        run: |
          git checkout master
          git pull origin master
          git checkout release
          git reset --hard master

      - name: Remove .gitignore and .github
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git rm -r --cached .gitignore .github
          git commit -m "New release"

      - name: Push changes
        run: |
          git push -f origin release
          release:
            needs: merge
            runs-on: ubuntu-latest
            steps:
              - name: Checkout code
                uses: actions/checkout@v4
                with:
                  ref: release
              - name: Extract version
                id: extract_version
                run: echo "::set-output name=version::$(grep -oP '_VERSION = "\K[^"]+' core/ui_settings.lua)"
              - name: Get latest release tag
                id: latest_release
                uses: actions/github-script@v7
                with:
                  script: |
                    const releases = await github.repos.listReleases({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                    });
                    return releases.data[0].tag_name;
              - name: Compare versions and create release
                id: create_release
                uses: actions/github-script@v7
                with:
                  script: |
                    const newVersion = "${{ steps.extract_version.outputs.version }}";
                    const latestReleaseVersion = "${{ steps.latest_release.outputs.result }}".replace('zUI-v', '');
                    if (newVersion > latestReleaseVersion) {
                      await github.repos.createRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag_name: `zUI-v${newVersion}-beta`,
                        name: `zUI-v${newVersion}`,
                        draft: false,
                        prerelease: false,
                      });
                    }